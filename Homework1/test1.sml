(* Simple test for hw1.sml*)
use "hw1.sml";

val test1_1 = is_older((1981,1,1),(1982,2,2)) = true

val test1_2 = is_older((1981,1,1),(1981,2,1)) = true

val test1_3 = is_older((1981,1,1),(1981,1,2)) = true

val test1_4 = is_older((2020,1,2),(2020,1,1)) = false

val test1_5 = is_older((2020,3,30),(2020,3,30)) = false
						      
val test2_1 = number_in_month([(2020,2,4), (2020,2,1), (2020,10,10)], 2) = 2 
							     
val test2_2 = number_in_month([(2020,1,1), (2020,1,15), (1919,5,10)], 10) = 0

val test2_3 = number_in_month([(2020,8,1), (2020,8,2), (1941,8,10), (1912,8,11), (1824,8,15), (2019,8,17)], 8) = 6

val test3_1 = number_in_months([(2020,1,15), (1942,2,16), (1935,1,17), (1990,2,19), (2018,3,10), (2021,5,1)],[1,2,3]) = 5
										
val test3_2 = number_in_months([(2020,1,15), (1942,2,16), (1935,1,17), (1990,2,19), (2018,3,10), (2021,5,1)],[4,6,7]) = 0

val test3_3 = number_in_months([(2020,1,15), (1942,2,16), (1935,1,17), (1990,2,19), (2018,3,10), (2021,5,1)],[5]) = 1

val test3_4 = number_in_months([(2020,1,15), (1942,2,16), (1935,1,17), (1990,2,19), (2018,3,10), (2021,5,1)],[]) = 0

val test4_1 = dates_in_month([(2020,1,1), (2020,1,10), (2020,1,20), (2019,10,31), (2015,12,17), (2020,1,30)], 1) = [(2020,1,1), (2020,1,10), (2020,1,20), (2020,1,30)] 
val test4_2 = dates_in_month([(2020,1,15), (1942,2,16), (1935,1,17), (1990,2,19), (2018,3,10), (2021,5,1)], 5) = [(2021,5,1)]

val test4_3 = dates_in_month([(2020,1,15), (1942,2,16), (1935,1,17), (1990,2,19), (2018,3,10), (2021,5,1)], 10) = []

val test5_1 = dates_in_months([(2020,1,15), (1942,2,16), (1935,1,17), (1990,2,19), (2018,3,10), (2021,5,1)], []) = []

val test5_2 = dates_in_months([(2020,1,15), (1942,2,16), (1935,1,17), (1990,2,19), (2018,3,10), (2021,5,1)], [1,2]) = [(2020,1,15), (1935,1,17), (1942,2,16), (1990,2,19)]

val test5_3 = dates_in_months([(2020,5,1), (2020,6,1), (2020,7,1), (2020,8,1), (2020,9,1)], [5,7,9]) = [(2020,5,1), (2020,7,1), (2020,9,1)] 

														      
